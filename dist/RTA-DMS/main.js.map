{"version":3,"sources":["./src/app/modules/home/home.component.ts","./src/app/modules/home/home.component.html","./src/app/modules/client/client.component.ts","./src/app/modules/client/client.component.html","./src/environments/environment.ts","./src/app/shared/services/file.service.ts","./src/app/modules/user/user.component.ts","./src/app/modules/user/user.component.html","./src/app/authentication/service/auth/auth.service.ts","./src/app/shared/component/footer/footer.component.ts","./src/app/shared/component/footer/footer.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/shared/services/token-interceptor.service.ts","./src/app/app.module.ts","./src/app/shared/config/commons.settings.ts","./src/app/layouts/default/default-routing.module.ts","./src/app/shared/services/document.service.ts","./src/app/shared/material/material.module.ts","./src/app/shared/component/dialog-logout/dialog-logout.component.ts","./src/app/shared/component/dialog-logout/dialog-logout.component.html","./src/app/shared/services/user.service.ts","./src/app/shared/services/toaster.service.ts","./src/app/layouts/default/default.module.ts","./src/app/modules/document/document.component.ts","./src/app/modules/document/document.component.html","./src/app/shared/services/client.service.ts","./src/app/authentication/service/guards/auth.guard.ts","./src/app/app-routing.module.ts","./src/app/layouts/default/default.component.ts","./src/app/layouts/default/default.component.html","./src/app/modules/document/dialog-deletefile/dialog-deletefile.component.ts","./src/app/modules/document/dialog-deletefile/dialog-deletefile.component.html","./src/app/shared/component/header/header.component.ts","./src/app/shared/component/header/header.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Component, Input, OnInit} from '@angular/core';\nimport {FormBuilder, Validators} from '@angular/forms';\nimport {FileService} from '../../shared/services/file.service';\nimport {NgxUiLoaderService} from 'ngx-ui-loader';\nimport {DocumentService} from '../../shared/services/document.service';\nimport {Document} from '../document/document';\nimport {ClientService} from '../../shared/services/client.service';\nimport {AuthService} from '../../authentication/service/auth/auth.service';\nimport {ToasterService} from '../../shared/services/toaster.service';\nimport {SETTINGS} from '../../shared/config/commons.settings';\nimport {UserService} from '../../shared/services/user.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  files: File[] = [];\n  documents: Document[];\n  companies: Array<string>;\n  years: Array<string>;\n  reports: Array<string>;\n  old: string;\n\n  constructor(private fb: FormBuilder,\n              private fileService: FileService,\n              private ngxUiLoaderService: NgxUiLoaderService,\n              private documentService: DocumentService,\n              private clientService: ClientService,\n              private toasterService: ToasterService,\n              private authService: AuthService,\n              private userService: UserService,\n              private router: Router) { }\n\n  // @ts-ignore\n  findDocForm = this.fb.group({\n    tin: [''],\n    companyName: [''],\n    financialYear: [''],\n    reportType: ['']\n  });\n\n  // @ts-ignore\n  changePasswordForm = this.fb.group({\n    oldPassword: [''],\n    newPassword: [''],\n    password: ['']\n  });\n\n  ngOnInit(): void {\n    this.fileService.onDownloadLinkChange.\n    subscribe( resp => {\n      const blob = new Blob([resp.data]);\n      const url = window.URL.createObjectURL(blob);\n\n      const a = document.createElement('a');\n      document.body.appendChild(a);\n      a.setAttribute('style', 'display: none');\n      a.href = url;\n      a.download = resp.fileName;\n      a.click();\n      this.ngxUiLoaderService.stop();\n      window.URL.revokeObjectURL(url);\n      a.remove();\n    });\n\n    this.companyList();\n    this.yearList();\n    this.reportList();\n  }\n  // tslint:disable-next-line:typedef\n  public yearList(){\n    this.documentService.getFinancialYearList().subscribe(\n      (listYears: Array<string>) => this.years = listYears,\n      error => console.log('Cannot get year list')\n    );\n  }\n  // tslint:disable-next-line:typedef\n  companyList(){\n    this.clientService.getCompanies().subscribe(\n      // tslint:disable-next-line:ban-types\n      (listCompanies: Array<string>) => this.companies = listCompanies,\n      error => console.log('Cannot get company list')\n    );\n  }\n  // tslint:disable-next-line:typedef\n  reportList(){\n    this.documentService.getReportList().subscribe(\n      (listReports: Array<string>) => this.reports = listReports,\n      error => console.log('Cannot get report types')\n    );\n  }\n  // tslint:disable-next-line:typedef\n  getFile() {\n    // @ts-ignore\n    this.ngxUiLoaderService.start();\n\n    this.documentService.getDocument(this.findDocForm.getRawValue().financialYear,\n      this.findDocForm.getRawValue().reportType,\n      this.findDocForm.getRawValue().companyName)\n      .subscribe(\n        (listDocuments) => {\n          this.documents = listDocuments;\n          this.ngxUiLoaderService.stop();\n        },\n        (error) => {\n          console.log(error);\n          this.ngxUiLoaderService.stop();\n        }\n      );\n    // this.findDocForm.reset();\n  }\n\n  downloadFileTest(fileName): void{\n    this.ngxUiLoaderService.start();\n    this.fileService.downloadFile(fileName);\n  }\n\n  // tslint:disable-next-line:typedef\n  clearTable(){\n    this.documents = [];\n  }\n\n  // tslint:disable-next-line:typedef\n  changePassword() {\n    this.ngxUiLoaderService.start();\n    const username = this.authService.getUserObject().username;\n\n    if (this.changePasswordForm.getRawValue().newPassword === this.changePasswordForm.getRawValue().password){\n\n      // this.userService.changePassword(username, this.changePasswordForm.getRawValue().\n      //   oldPassword, this.changePasswordForm.value).subscribe(\n      //     re => this.correctPassword(),\n      //   error => this.ngxUiLoaderService.stop()\n      // );\n\n      this.userService.changePassword(username, this.changePasswordForm.getRawValue().\n        oldPassword, this.changePasswordForm.value).subscribe(\n        response => {\n          this.toasterService.showToaster('Password update successfully!', SETTINGS.TOASTER_MESSAGES.success);\n          localStorage.clear();\n          this.router.navigate(['/login']);\n          this.ngxUiLoaderService.stop();\n        },\n        (error) => {\n          console.log(error);\n          this.ngxUiLoaderService.stop();\n          this.toasterService.showToaster('Cannot update password!', SETTINGS.TOASTER_MESSAGES.error);\n          this.changePasswordForm.reset();\n        }\n      );\n\n    }\n    else {\n      this.ngxUiLoaderService.stop();\n      this.toasterService.showToaster('New password and confirm new password does not match!', SETTINGS.TOASTER_MESSAGES.error);\n      this.changePasswordForm.reset();\n    }\n  }\n\n  // tslint:disable-next-line:typedef\n  correctPassword(){\n    this.toasterService.showToaster('Password update successfully!', SETTINGS.TOASTER_MESSAGES.success);\n    localStorage.clear();\n    this.router.navigate(['/login']);\n    this.ngxUiLoaderService.stop();\n  }\n}\n","<div>\n  <br>\n</div>\n\n<div>\n  <mat-card class=\"card\">\n\n    <mat-card-title>\n      Find Documents\n    </mat-card-title>\n\n    <div>\n      <br>\n    </div>\n\n    <div>\n      <form [formGroup]=\"findDocForm\">\n\n        <table>\n\n          <tr>\n            <td class=\"label\">\n              <mat-label for=\"cname\"> Company Name :</mat-label>\n            </td>\n\n            <td>\n              <mat-form-field appearance=\"fill\">\n                <mat-label>Select...</mat-label>\n                <mat-select formControlName=\"companyName\" required>\n                  <mat-option  *ngFor=\"let company of companies\" [value]=\"company\">{{company}}</mat-option>\n                </mat-select>\n              </mat-form-field>\n            </td>\n          </tr>\n\n<!--          <tr>-->\n<!--            <td class=\"label\">-->\n<!--              <mat-label for=\"tin\">TIN :</mat-label>-->\n<!--            </td>-->\n\n<!--            <td>-->\n<!--              <mat-form-field class=\"example-full-width\">-->\n<!--                <input type=\"text\" formControlName=\"tin\" required matInput>-->\n<!--              </mat-form-field>-->\n<!--            </td>-->\n\n<!--          </tr>-->\n\n          <tr>\n            <td class=\"label\">\n              <mat-label for=\"fyear\"> Financial Year :</mat-label>\n            </td>\n\n            <td>\n              <mat-form-field appearance=\"fill\">\n                <mat-label>Select...</mat-label>\n                <mat-select formControlName=\"financialYear\" required>\n                  <mat-option *ngFor=\"let year of years\" [value]=\"year\">{{year}}</mat-option>\n                </mat-select>\n              </mat-form-field>\n            </td>\n          </tr>\n\n          <tr>\n            <td class=\"label\">\n              <mat-label for=\"rtype\"> Report Type :</mat-label>\n            </td>\n\n            <td>\n              <mat-form-field appearance=\"fill\">\n                <mat-label>Select...</mat-label>\n                <mat-select formControlName=\"reportType\" required>\n                  <!--need to add values automatically -->\n                  <mat-option *ngFor=\"let report of reports\" [value]=\"report\">{{report}}</mat-option>\n                </mat-select>\n              </mat-form-field>\n            </td>\n          </tr>\n\n          <tr>\n            <td class=\"label\">\n              <button mat-raised-button color=\"accent\" type=\"reset\" value=\"Reset\" (click)=\"clearTable()\">\n                <mat-icon>refresh</mat-icon>\n                Reset\n              </button>\n            </td>\n\n            <td class=\"label2\">\n              <button mat-raised-button color=\"primary\" type=\"submit\" value=\"Submit\"\n              [disabled]=\"!findDocForm.valid\" (click)=\"getFile()\">\n                <mat-icon>search</mat-icon>\n                Find\n              </button>\n            </td>\n          </tr>\n        </table>\n      </form>\n<!--      {{findDocForm.value | json}}-->\n    </div>\n  </mat-card>\n\n  <br>\n</div>\n\n<div >\n  <mat-card class=\"card\">\n    <mat-card-title>Document List <mat-icon>list_alt</mat-icon></mat-card-title>\n    <br>\n    <div>\n      <!--Document Table-->\n      <!--Example-->\n\n      <table  *ngIf=\"documents && documents.length\" class=\"table\">\n        <thead class=\"thead-dark\">\n          <tr>\n            <th >No.</th>\n            <th> Financial Year </th>\n            <th > Report Type </th>\n            <th> Document </th>\n            <th > Action </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let document of documents; index as i\">\n            <td>{{i+1}}</td>\n            <td>{{document.financialYear}}</td>\n            <td>{{document.reportType}}</td>\n            <td>{{document.documentName}}</td>\n            <td>\n              <button mat-raised-button color=\"primary\" type=\"submit\" value=\"Submit\"\n                      (click)=\"downloadFileTest(document.documentName)\">\n                <mat-icon>save_alt</mat-icon>Download\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n      <!-- End Example-->\n      <!--End Document Table-->\n    </div>\n  </mat-card>\n</div>\n\n\n<div>\n  <br>\n</div>\n\n<div>\n  <mat-card class=\"card\">\n\n    <mat-card-title>\n      Change Password\n    </mat-card-title>\n\n    <div>\n      <br>\n    </div>\n\n    <div>\n      <form [formGroup]=\"changePasswordForm\">\n\n        <table>\n\n          <tr>\n            <td class=\"label\">\n              <mat-label for=\"password\"> Current Password :</mat-label>\n            </td>\n\n            <td>\n              <mat-form-field class=\"example-full-width\">\n                <input type=\"password\" formControlName=\"oldPassword\"  matInput required>\n              </mat-form-field>\n            </td>\n          </tr>\n\n          <tr>\n            <td class=\"label\">\n              <mat-label for=\"\"> New Password :</mat-label>\n            </td>\n\n            <td>\n              <mat-form-field class=\"example-full-width\">\n                <input type=\"password\" formControlName=\"newPassword\"  matInput required>\n              </mat-form-field>\n            </td>\n          </tr>\n\n          <tr>\n            <td class=\"label\">\n              <mat-label for=\"reNewPassword\"> Confirm Password :</mat-label>\n            </td>\n\n            <td>\n              <mat-form-field class=\"example-full-width\">\n                <input type=\"password\" formControlName=\"password\"  matInput required>\n              </mat-form-field>\n            </td>\n          </tr>\n\n          <tr>\n            <td class=\"label\">\n              <button mat-raised-button color=\"accent\" type=\"reset\" value=\"Reset\">\n                <mat-icon>refresh</mat-icon>\n                Reset\n              </button>\n            </td>\n\n            <td class=\"label2\">\n              <button mat-raised-button color=\"primary\" type=\"submit\" value=\"Submit\"\n                      [disabled]=\"!changePasswordForm.valid\" (click)=\"changePassword()\">\n                <mat-icon>people_alt</mat-icon>\n                Update\n              </button>\n            </td>\n          </tr>\n        </table>\n      </form>\n    </div>\n  </mat-card>\n</div>\n\n<div><br></div>\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {ClientService} from '../../shared/services/client.service';\nimport {ToasterService} from '../../shared/services/toaster.service';\nimport {SETTINGS} from '../../shared/config/commons.settings';\nimport {Client} from './client';\nimport {NgxUiLoaderService} from 'ngx-ui-loader';\n\n@Component({\n  selector: 'app-client',\n  templateUrl: './client.component.html',\n  styleUrls: ['./client.component.scss']\n})\nexport class ClientComponent implements OnInit {\n  companies: Array<string>;\n  private privileges: string;\n  getClient = false;\n  updateClient = false;\n  addClient = false;\n\n  constructor(private fb: FormBuilder,\n              private clientService: ClientService,\n              private ngxUiLoaderService: NgxUiLoaderService,\n              private toasterService: ToasterService) { }\n\n  // @ts-ignore\n  newClientForm = this.fb.group({\n    tin: [''],\n    companyName: [''],\n    email: [''],\n    phone: [''],\n    address: [''],\n    status: ['']\n  });\n  // @ts-ignore\n  /*newClientForm = new FormGroup({\n    tin: new FormControl(''),\n    companyName: new FormControl(''),\n    email: new FormControl(''),\n    phone: new FormControl(''),\n    address: new FormControl(''),\n    status: new FormControl('')\n  });*/\n  // @ts-ignore\n  findClientForm = this.fb.group({\n    tin: [''],\n    companyName: [''],\n    email: [''],\n    phone: [''],\n    address: [''],\n    status: ['']\n  });\n\n  /*\n  findClientForm = new FormGroup({\n    tin: new FormControl(''),\n    companyName: new FormControl(''),\n    email: new FormControl(''),\n    phone: new FormControl(''),\n    address: new FormControl(''),\n    status: new FormControl('')\n  });*/\n\n  ngOnInit(): void {\n    this.privileges = localStorage.getItem(SETTINGS.PRIVILEGES);\n\n    this.getClient = this.privileges.includes('CLIENT.GET');\n    this.updateClient = this.privileges.includes('CLIENT.PUT');\n    this.addClient = this.privileges.includes('CLIENT.POST');\n\n    this.clientService.getAllcompanies().subscribe(\n      // tslint:disable-next-line:ban-types\n      (listCompanies: Array<string>) => this.companies = listCompanies,\n      error => console.log('Cannot get company list')\n    );\n  }\n\n  // tslint:disable-next-line:typedef\n  loadApiData(): void{\n    // @ts-ignore\n    this.ngxUiLoaderService.start();\n    this.clientService.getClient(this.findClientForm.getRawValue().companyName).subscribe(\n      (client: Client) => {\n        this.editClient(client);\n        this.ngxUiLoaderService.stop();\n      },\n      error => {\n        console.log('ERROR', error);\n        this.ngxUiLoaderService.stop();\n      }\n    );\n  }\n\n  editClient(client: Client): void{\n    this.findClientForm.patchValue({\n      tin: client.tin,\n      companyName: client.companyName,\n      email: client.email,\n      phone: client.phone,\n      address: client.address,\n      status: client.status\n    });\n  }\n  // tslint:disable-next-line:typedef\n  onSubmit() {\n    this.ngxUiLoaderService.start();\n    this.clientService.newClient(this.newClientForm.value)\n        .subscribe(\n          response => {console.log('SUCCESS', response);\n                       this.ngxUiLoaderService.stop();\n                       this.toasterService.showToaster('Client Successfully Added!', SETTINGS.TOASTER_MESSAGES.success);\n                       this.newClientForm.reset(); },\n          error => {\n            console.log('ERROR', error);\n            this.ngxUiLoaderService.stop();\n            this.toasterService.showToaster('Add new client failed!', SETTINGS.TOASTER_MESSAGES.error);\n          }\n        );\n  }\n\n  // tslint:disable-next-line:typedef\n  onUpdate(){\n    this.ngxUiLoaderService.start();\n    try {\n      this.clientService.updateClient(this.findClientForm.getRawValue().tin, this.findClientForm.value)\n        .subscribe(\n          response => {\n            console.log('SUCCESS', response);\n            this.ngxUiLoaderService.stop();\n            this.toasterService.showToaster('Client Successfully Updated!', SETTINGS.TOASTER_MESSAGES.success);\n            this.findClientForm.reset();\n          },\n          error => {\n            console.log('ERROR', error);\n          }\n        );\n\n    }catch (e){\n      this.ngxUiLoaderService.stop();\n      return this.toasterService.showToaster('Client update failed!', SETTINGS.TOASTER_MESSAGES.error);\n    }\n  }\n}\n","<div>\n  <br>\n</div>\n\n<div>\n  <mat-card class=\"card\">\n\n    <mat-card-title> View / Update Client </mat-card-title>\n\n    <div>\n      <br>\n    </div>\n\n    <div>\n      <form [formGroup]=\"findClientForm\">\n\n        <table >\n          <tr>\n            <td class=\"label\">\n              <mat-label for=\"cname\"> Company Name :</mat-label>\n            </td>\n\n            <td>\n              <mat-form-field appearance=\"fill\">\n                <mat-label>Select...</mat-label>\n                <mat-select formControlName=\"companyName\" required>\n                  <mat-option  *ngFor=\"let company of companies\" [value]=\"company\">{{company}}</mat-option>\n                </mat-select>\n              </mat-form-field>\n            </td>\n          </tr>\n\n          <tr>\n            <td colspan=\"2\">\n              <button mat-raised-button color=\"primary\" type=\"submit\"\n                      *ngIf=\"getClient\"\n                      value=\"Submit\" (click)=\"loadApiData()\"><mat-icon>search</mat-icon> Find</button>\n            </td>\n          </tr>\n          <br>\n          <mat-divider class=\"mat-divider\"> </mat-divider>\n\n          <tr>\n            <td class=\"label\">\n              <mat-label for=\"tin\">TIN :</mat-label>\n            </td>\n\n            <td>\n              <mat-form-field class=\"example-full-width\">\n                <input type=\"text\" formControlName=\"tin\" required matInput>\n              </mat-form-field>\n            </td>\n          </tr>\n\n          <tr>\n            <td class=\"label\">\n              <mat-label for=\"email\"> Email :</mat-label>\n            </td>\n\n            <td>\n              <mat-form-field class=\"example-full-width\">\n                <input type=\"email\" formControlName=\"email\" matInput>\n              </mat-form-field>\n            </td>\n          </tr>\n\n          <tr>\n            <td class=\"label\">\n              <mat-label for=\"phone\"> Phone :</mat-label>\n            </td>\n\n            <td>\n              <mat-form-field class=\"example-full-width\">\n                <input type=\"text\" formControlName=\"phone\" matInput>\n              </mat-form-field>\n            </td>\n          </tr>\n\n          <tr>\n            <td class=\"label\">\n              <mat-label for=\"addr\">Address :</mat-label>\n            </td>\n\n            <td>\n              <mat-form-field class=\"example-full-width\">\n                  <textarea formControlName=\"address\" matInput>\n                  </textarea>\n              </mat-form-field>\n            </td>\n          </tr>\n          <br>\n          <tr>\n            <td class=\"label2\" colspan=\"2\">\n              <section class=\"example-section\">\n                <mat-checkbox class=\"example-margin\" color=\"primary\" formControlName=\"status\">Active</mat-checkbox>\n              </section>\n            </td>\n          </tr>\n          <br>\n          <tr>\n            <td class=\"label\">\n              <button mat-raised-button color=\"accent\" type=\"reset\" value=\"Reset\"><mat-icon>refresh</mat-icon> Reset</button>\n            </td>\n\n            <td>\n              <button mat-raised-button color=\"primary\" type=\"submit\" value=\"Submit\"\n                      *ngIf=\"updateClient\"\n              [disabled]=\"!findClientForm.valid\" (click)=\"onUpdate()\"><mat-icon>save_alt</mat-icon> Update</button>\n            </td>\n          </tr>\n        </table>\n      </form>\n    </div>\n  </mat-card>\n</div>\n\n<div>\n  <br>\n</div>\n\n<div>\n  <mat-card class=\"card\">\n\n    <mat-card-title> Add New Client </mat-card-title>\n\n    <div>\n      <br>\n    </div>\n\n    <div>\n      <form [formGroup]=\"newClientForm\" (ngSubmit)=\"onSubmit()\">\n\n        <table >\n          <tr>\n            <td class=\"label\">\n              <mat-label for=\"tin\">TIN :</mat-label>\n            </td>\n\n            <td>\n              <mat-form-field class=\"example-full-width\">\n                <input type=\"text\" formControlName=\"tin\" required matInput placeholder=\"Ex: 123456789\">\n              </mat-form-field>\n            </td>\n\n          </tr>\n\n          <tr>\n            <td class=\"label\">\n              <mat-label for=\"cname\"> Company Name :</mat-label>\n            </td>\n\n            <td>\n              <mat-form-field class=\"example-full-width\">\n                <input type=\"text\" formControlName=\"companyName\" matInput required placeholder=\"Ex: RTA Sri Lanka\">\n              </mat-form-field>\n            </td>\n          </tr>\n\n          <tr>\n            <td class=\"label\">\n              <mat-label for=\"email\"> Email :</mat-label>\n            </td>\n\n            <td>\n              <mat-form-field class=\"example-full-width\">\n                <input type=\"email\" formControlName=\"email\" matInput placeholder=\"Ex: rtasrilanka@gmail.com\">\n              </mat-form-field>\n            </td>\n          </tr>\n\n          <tr>\n            <td class=\"label\">\n              <mat-label for=\"phone\"> Phone :</mat-label>\n            </td>\n\n            <td>\n              <mat-form-field class=\"example-full-width\">\n                <input type=\"text\" formControlName=\"phone\" matInput placeholder=\"Ex: 123456789\">\n              </mat-form-field>\n            </td>\n          </tr>\n\n          <tr>\n            <td class=\"label\">\n              <mat-label for=\"addr\">Address :</mat-label>\n            </td>\n\n            <td>\n              <mat-form-field class=\"example-full-width\">\n                  <textarea formControlName=\"address\" matInput placeholder=\"Ex: Rodney Street, Colombo 08\">\n                  </textarea>\n              </mat-form-field>\n            </td>\n          </tr>\n          <br>\n          <tr>\n            <td class=\"label2\" colspan=\"2\">\n              <section class=\"example-section\">\n                <mat-checkbox class=\"example-margin\" color=\"primary\" formControlName=\"status\">Active</mat-checkbox>\n              </section>\n            </td>\n          </tr>\n          <br>\n          <tr>\n            <td class=\"label\">\n              <button mat-raised-button color=\"accent\" type=\"reset\" value=\"Reset\"><mat-icon>refresh</mat-icon> Reset</button>\n            </td>\n\n            <td>\n              <button mat-raised-button color=\"primary\" type=\"submit\" value=\"Submit\"\n                      *ngIf=\"addClient\"\n                      [disabled]=\"!newClientForm.valid\"><mat-icon>check</mat-icon> Submit</button>\n            </td>\n          </tr>\n        </table>\n      </form>\n    </div>\n  </mat-card>\n</div>\n\n<div>\n  <br>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true,\n  apiUrl: 'http://3.92.21.51:8080/rtadms-org'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileService {\n\n  uploadedFileResponse: string;\n  onUploadedFileResponseChange: Subject<any> = new Subject();\n\n  onDownloadLinkChange: Subject<any> = new Subject();\n\n  constructor(private http: HttpClient) { }\n\n  downloadFile(fileName): void{\n    this.http.get(`/api/download-file?fileName=${fileName}`, {responseType: 'blob'}).subscribe((response: any) => {\n      this.onDownloadLinkChange.next({fileName, data: response});\n    });\n  }\n\n  uploadFile(file): void{\n    this.http.post(`/api/new-file`, file, {responseType: 'json'}).subscribe((response: any) => {\n      this.uploadedFileResponse = response;\n      this.onUploadedFileResponseChange.next(this.uploadedFileResponse);\n    });\n  }\n\n  // tslint:disable-next-line:typedef\n  deleteFile(fileName){\n    // @ts-ignore\n    return this.http.delete(`/api/delete-file?fileName=` + fileName);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {UserService} from '../../shared/services/user.service';\nimport {ToasterService} from '../../shared/services/toaster.service';\nimport {SETTINGS} from '../../shared/config/commons.settings';\nimport {User} from './user';\nimport {NgxUiLoaderService} from 'ngx-ui-loader';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss']\n})\nexport class UserComponent implements OnInit {\n   userRegistrationForm: FormGroup;\n   userFindForm: FormGroup;\n\n  private privileges: string;\n  getUser = false;\n  updateUser = false;\n  addUser = false;\n\n  constructor(private fb: FormBuilder,\n              private userService: UserService,\n              private ngxUiLoaderService: NgxUiLoaderService,\n              private toasterService: ToasterService) { }\n\n\n  ngOnInit(): void {\n    this.privileges = localStorage.getItem(SETTINGS.PRIVILEGES);\n\n    this.getUser = this.privileges.includes('USER.GET');\n    this.updateUser = this.privileges.includes('USER.PUT');\n    this.addUser = this.privileges.includes('USER.POST');\n\n    this.userRegistrationForm = this.fb.group({\n      // nic: ['', Validators.compose([Validators.required]), Validators.minLength(10)],\n      nic: ['', Validators.compose([Validators.required])],\n      username: ['', Validators.compose([Validators.required])],\n      email: [''],\n      roles: [''],\n      password: ['', Validators.compose([Validators.required])],\n      status: ['']\n    });\n\n    this.userFindForm = this.fb.group({\n      nic: ['', Validators.compose([Validators.required])],\n      username: ['', Validators.compose([Validators.required])],\n      email: [''],\n      roles: [Object],\n      status: ['']\n    });\n  }\n\n  // tslint:disable-next-line:typedef\n  loadApiData(): void{\n    this.ngxUiLoaderService.start();\n    this.userService.getUser(this.userFindForm.getRawValue().username)\n      .subscribe(\n        (user: User) => {\n          this.ngxUiLoaderService.stop();\n          this.editUser(user);\n          this.toasterService.showToaster(`Success!`, SETTINGS.TOASTER_MESSAGES.success);\n          // console.log(user.roles[0].roleName);\n        },\n        error => {\n          console.log('ERROR', error);\n          this.ngxUiLoaderService.stop();\n          this.toasterService.showToaster(`Failed!`, SETTINGS.TOASTER_MESSAGES.error);\n        }\n      );\n  }\n  editUser(user: User): void{\n    // @ts-ignore\n    // @ts-ignore\n    this.userFindForm.patchValue({\n      nic: user.nic,\n      username: user.username,\n      email: user.email,\n      roles: user.roles[0].roleName,\n      status: user.status\n    });\n  }\n\n  // tslint:disable-next-line:typedef\n  onSubmit(){\n    // this.newDocumentForm.patchValue({documentName: this.uploadedFileName});\n    this.ngxUiLoaderService.start();\n    this.userRegistrationForm\n      .patchValue({roles: [{roleName: this.userRegistrationForm.getRawValue().roles}]});\n\n    this.userService.newUser(this.userRegistrationForm.value)\n        .subscribe(\n          response => {\n            console.log('SUCCESS', response);\n            this.ngxUiLoaderService.stop();\n            this.toasterService.showToaster(`User successfully added!`, SETTINGS.TOASTER_MESSAGES.success);\n            this.userRegistrationForm.reset();\n          },\n          error => {\n            console.log('ERROR', error);\n            this.ngxUiLoaderService.stop();\n            this.toasterService.showToaster(`User added failed!`, SETTINGS.TOASTER_MESSAGES.error);\n          }\n        );\n  }\n\n  // tslint:disable-next-line:typedef\n  onUpdate(){\n    this.ngxUiLoaderService.start();\n    this.userFindForm\n      .patchValue({roles: [{roleName: this.userFindForm.getRawValue().roles}]});\n\n    this.userService.updateUser(this.userFindForm.getRawValue().username, this.userFindForm.value)\n        .subscribe(\n          response => {\n            console.log('SUCCESS', response);\n            this.ngxUiLoaderService.stop();\n            this.toasterService.showToaster('User Successfully Updated!', SETTINGS.TOASTER_MESSAGES.success);\n            this.userFindForm.reset();\n          },\n          error => {\n            console.log('ERROR', error);\n            this.ngxUiLoaderService.stop();\n            this.toasterService.showToaster(`User update failed!`, SETTINGS.TOASTER_MESSAGES.error);\n          }\n        );\n  }\n}\n","<div>\n  <br>\n</div>\n\n<div>\n  <mat-card class=\"card\">\n\n    <mat-card-title> View / Update User </mat-card-title>\n\n    <div>\n      <br>\n    </div>\n\n    <div>\n      <form [formGroup]=\"userFindForm\">\n\n        <table >\n\n          <tr>\n            <td class=\"label\">\n              <mat-label for=\"uName\"> User Name :</mat-label>\n            </td>\n\n            <td>\n              <mat-form-field class=\"example-full-width\">\n                <input type=\"text\" formControlName=\"username\" matInput required>\n              </mat-form-field>\n            </td>\n          </tr>\n\n          <tr>\n            <td colspan=\"2\">\n              <button mat-raised-button color=\"primary\" type=\"submit\" value=\"Submit\"\n                      *ngIf=\"getUser\"\n                      (click)=\"loadApiData()\" [disabled]=\"!userFindForm.get('username').valid\">\n                <mat-icon>person_search</mat-icon> Find</button>\n            </td>\n          </tr>\n          <br>\n          <mat-divider class=\"mat-divider\"> </mat-divider>\n\n          <tr>\n            <td class=\"label\">\n              <mat-label for=\"nic\">NIC :</mat-label>\n            </td>\n\n            <td>\n              <mat-form-field class=\"example-full-width\">\n                <input type=\"text\" formControlName=\"nic\" matInput>\n              </mat-form-field>\n            </td>\n          </tr>\n\n          <tr>\n            <td class=\"label\">\n              <mat-label for=\"email\"> Email :</mat-label>\n            </td>\n\n            <td>\n              <mat-form-field class=\"example-full-width\">\n                <input type=\"email\" formControlName=\"email\" matInput>\n              </mat-form-field>\n            </td>\n          </tr>\n\n          <tr>\n            <td class=\"label\">\n              <mat-label for=\"role\"> Role :</mat-label>\n            </td>\n\n            <td>\n              <mat-form-field appearance=\"fill\">\n                <mat-label>Select one</mat-label>\n                <mat-select formControlName=\"roles\" matInput>\n<!--                  <mat-option *ngFor=\"let role of roles\" value=\"{{role}}\"> {{role}}</mat-option>-->\n                  <mat-option value=\"ROLE_SUPER_ADMIN\">Admin </mat-option>\n                  <mat-option value=\"ROLE_ADMIN\">Moderator </mat-option>\n                  <mat-option value=\"ROLE_USER\">User </mat-option>\n                </mat-select>\n              </mat-form-field>\n            </td>\n          </tr>\n          <br>\n          <tr>\n            <td class=\"label2\" colspan=\"2\">\n              <section class=\"example-section\">\n                <mat-checkbox class=\"example-margin\" color=\"primary\" formControlName=\"status\">Active</mat-checkbox>\n              </section>\n            </td>\n          </tr>\n          <br>\n          <tr>\n            <td class=\"label\">\n              <button mat-raised-button color=\"accent\" type=\"reset\" value=\"Reset\"><mat-icon>refresh</mat-icon> Reset</button>\n            </td>\n\n            <td>\n              <button mat-raised-button color=\"primary\" type=\"submit\" value=\"Submit\"\n                      [disabled]=\"!userFindForm.valid\"\n                      *ngIf=\"updateUser\"\n              (click)=\"onUpdate()\"><mat-icon>people_alt</mat-icon> Update</button>\n            </td>\n          </tr>\n        </table>\n      </form>\n    </div>\n  </mat-card>\n</div>\n\n<div>\n  <br>\n</div>\n\n<div>\n  <mat-card class=\"card\">\n\n    <mat-card-title> Add New User </mat-card-title>\n\n    <div>\n      <br>\n    </div>\n\n    <div>\n      <form [formGroup]=\"userRegistrationForm\" (ngSubmit)=\"onSubmit()\">\n\n        <table >\n          <tr>\n            <td class=\"label\">\n              <mat-label for=\"nic\">NIC :</mat-label>\n            </td>\n\n            <td>\n              <mat-form-field class=\"example-full-width\">\n                <input type=\"text\" formControlName=\"nic\"  matInput placeholder=\"Ex: 983612358v or 199836102358\">\n              </mat-form-field>\n            </td>\n          </tr>\n\n          <tr>\n            <td class=\"label\">\n              <mat-label for=\"uName\"> User Name :</mat-label>\n            </td>\n\n            <td>\n              <mat-form-field class=\"example-full-width\">\n                <input type=\"text\" formControlName=\"username\" matInput placeholder=\"Ex: gayan\">\n              </mat-form-field>\n            </td>\n          </tr>\n\n          <tr>\n            <td class=\"label\">\n              <mat-label for=\"email\"> Email :</mat-label>\n            </td>\n\n            <td>\n              <mat-form-field class=\"example-full-width\">\n                <input type=\"email\" formControlName=\"email\" matInput placeholder=\"Ex: gayan@gmail.com\">\n              </mat-form-field>\n            </td>\n          </tr>\n\n          <tr>\n            <td class=\"label\">\n              <mat-label for=\"role\"> Role :</mat-label>\n            </td>\n\n            <td>\n              <mat-form-field appearance=\"fill\">\n                <mat-label>Select one</mat-label>\n                <mat-select formControlName=\"roles\" matInput>\n<!--                  <mat-option *ngFor=\"let role of roles\" value=\"{{role}}\"> {{role}}</mat-option>-->\n                  <mat-option value=\"ROLE_SUPER_ADMIN\">Admin </mat-option>\n                  <mat-option value=\"ROLE_ADMIN\">Moderator </mat-option>\n                  <mat-option value=\"ROLE_USER\">User </mat-option>\n                </mat-select>\n              </mat-form-field>\n            </td>\n          </tr>\n\n          <tr>\n            <td class=\"label\">\n              <mat-label for=\"email\"> Password :</mat-label>\n            </td>\n\n            <td>\n              <mat-form-field class=\"example-full-width\">\n                <input type=\"password\" formControlName=\"password\" matInput>\n              </mat-form-field>\n            </td>\n          </tr>\n\n          <br>\n          <tr>\n            <td class=\"label2\" colspan=\"2\">\n              <section class=\"example-section\">\n                <mat-checkbox class=\"example-margin\" color=\"primary\" formControlName=\"status\">\n                  Active</mat-checkbox>\n              </section>\n            </td>\n          </tr>\n          <br>\n          <tr>\n            <td class=\"label\">\n              <button mat-raised-button color=\"accent\" type=\"reset\" value=\"Reset\"><mat-icon>refresh</mat-icon> Reset</button>\n            </td>\n\n            <td>\n              <button mat-raised-button color=\"primary\" type=\"submit\" value=\"Submit\"\n                      *ngIf=\"addUser\"\n                      [disabled]=\"!userRegistrationForm.valid\"><mat-icon>person_add_alt_1</mat-icon>\n                Add User</button>\n            </td>\n          </tr>\n        </table>\n      </form>\n    </div>\n  </mat-card>\n</div>\n\n<div>\n  <br>\n</div>\n","import { Injectable } from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {SETTINGS} from '../../../shared/config/commons.settings';\nimport {Router} from '@angular/router';\nimport {NgxUiLoaderService} from 'ngx-ui-loader';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private loginStatus = new Subject();\n\n  constructor(private http: HttpClient,\n              private router: Router,\n              private ngxUiLoaderService: NgxUiLoaderService) { }\n\n  login(username: string, password: string): void{\n    this.http.post( `/api/login`, {username, password})\n      .subscribe((response: any) => {\n        this.setSession(response);\n        this.ngxUiLoaderService.stop();\n        this.loginStatus.next({isAuthenticated: true});\n      }, error => {\n        if (error === 401 || error.status === 401){\n          return this.loginStatus.next({isAuthenticated: false});\n        }\n      });\n  }\n\n  setSession(payload): void{\n    this.ngxUiLoaderService.start();\n    const {jwtToken, userDTO} = payload;\n    const {permissions} = userDTO;\n    localStorage.setItem(SETTINGS.ACCESS_TOKEN, jwtToken);\n    localStorage.setItem(SETTINGS.USER, JSON.stringify(userDTO));\n    localStorage.setItem(SETTINGS.PRIVILEGES, JSON.stringify(permissions.map(permission => permission.permissionName)));\n  }\n\n  getLoggedInStatus(): Observable<any>{\n    return this.loginStatus.asObservable();\n  }\n\n  isLoggedIn(): boolean{\n    return localStorage.getItem(SETTINGS.ACCESS_TOKEN) !== null;\n  }\n\n  getUserObject(): any{\n    const userStr = localStorage.getItem(SETTINGS.USER);\n    return JSON.parse(userStr);\n  }\n\n  logOut(): void {\n    localStorage.clear();\n    this.router.navigate(['/login']);\n    this.ngxUiLoaderService.stop();\n  }\n\n  getToken(): any {\n    return localStorage.getItem(SETTINGS.ACCESS_TOKEN) || '';\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Footer -->\n<footer class=\"docs-footer\">\n\n  <!-- Copyright -->\n  <div class=\"footer-copyright text-center py-3\">© 2020 Copyright:\n    <a href=\"https://rtasrilanka.lk/\" target=\"blank\" style=\"color: #fff;\"> rtasrilanka.lk</a>\n  </div>\n  <!-- Copyright -->\n\n</footer>\n","import { Component } from '@angular/core';\nimport {environment} from '../environments/environment';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'RTA-DMS';\n\n  constructor() {\n    console.log(environment.production); // Logs false for default environment\n  }\n  //\n  // test(){\n  //   this.router.navigate(['login']);\n  // }\n}\n","<router-outlet></router-outlet>\n","import { Injectable } from '@angular/core';\nimport {HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {AuthService} from '../../authentication/service/auth/auth.service';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError, retry} from 'rxjs/operators';\nimport {ToasterService} from './toaster.service';\nimport {SETTINGS} from '../config/commons.settings';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor{\n\n  constructor(private authService: AuthService,\n              private toasterService: ToasterService) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    req = req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${this.authService.getToken()}`\n      }\n    });\n\n    return next.handle(req)\n      .pipe(\n        retry(1),\n        catchError((error: HttpErrorResponse) => {\n          // handle error here\n\n          if (error.status === 401){\n            this.toasterService.showToaster('Session Expired! Please login again.', SETTINGS.TOASTER_MESSAGES.error);\n            this.authService.logOut();\n          }\n\n          return throwError(error.status);\n        })\n      );\n  }\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MaterialModule} from './shared/material/material.module';\nimport { DefaultComponent } from './layouts/default/default.component';\nimport { HomeComponent } from './modules/home/home.component';\nimport { UserComponent } from './modules/user/user.component';\nimport { DocumentComponent } from './modules/document/document.component';\nimport { ClientComponent } from './modules/client/client.component';\nimport {DefaultModule} from './layouts/default/default.module';\nimport { HeaderComponent } from './shared/component/header/header.component';\nimport { FooterComponent } from './shared/component/footer/footer.component';\nimport { DialogLogoutComponent } from './shared/component/dialog-logout/dialog-logout.component';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {AuthService} from './authentication/service/auth/auth.service';\nimport {TokenInterceptorService} from './shared/services/token-interceptor.service';\nimport {NgxUiLoaderConfig, NgxUiLoaderModule} from 'ngx-ui-loader';\nimport {NgxDropzoneModule} from 'ngx-dropzone';\nimport {DocumentService} from './shared/services/document.service';\nimport {CdkColumnDef} from '@angular/cdk/table';\nimport {UserService} from \"./shared/services/user.service\";\nimport {ClientService} from \"./shared/services/client.service\";\nimport {FileService} from \"./shared/services/file.service\";\nimport {ToasterService} from \"./shared/services/toaster.service\";\nimport { DialogDeletefileComponent } from './modules/document/dialog-deletefile/dialog-deletefile.component';\n\nconst ngxUiLoaderConfig: NgxUiLoaderConfig = {\n  bgsColor: 'red',\n  bgsOpacity: 0.5,\n  bgsPosition: 'bottom-right',\n  bgsSize: 60,\n  bgsType: 'ball-spin-clockwise',\n  blur: 5,\n  delay: 0,\n  fastFadeOut: true,\n  fgsColor: 'red',\n  fgsPosition: 'center-center',\n  fgsSize: 60,\n  fgsType: 'ball-spin-clockwise',\n  gap: 24,\n  logoPosition: 'center-center',\n  logoSize: 120,\n  logoUrl: '',\n  masterLoaderId: 'master',\n  overlayBorderRadius: '0',\n  overlayColor: 'rgba(40, 40, 40, 0.8)',\n  pbColor: 'red',\n  pbDirection: 'ltr',\n  pbThickness: 3,\n  hasProgressBar: true,\n  text: '',\n  textColor: '#FFFFFF',\n  textPosition: 'center-center',\n  maxTime: -1,\n  minTime: 300\n};\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DefaultComponent,\n    HomeComponent,\n    UserComponent,\n    DocumentComponent,\n    ClientComponent,\n    HeaderComponent,\n    FooterComponent,\n    DialogLogoutComponent,\n    DialogDeletefileComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    DefaultModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    FormsModule,\n    NgxUiLoaderModule.forRoot(ngxUiLoaderConfig),\n    NgxDropzoneModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    AuthService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true\n    },\n    DocumentService,\n    UserService,\n    ClientService,\n    FileService,\n    ToasterService,\n    CdkColumnDef\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class SETTINGS {\r\n\r\n  public static ACCESS_TOKEN = '@Key:access-token';\r\n  public static USER = '@Key:user';\r\n  public static PRIVILEGES = '@Key:privileges';\r\n\r\n  public static BASE_URL = 'http://3.92.21.51:8080/rtadms-org';\r\n\r\n  public static TOASTER_MESSAGES = {\r\n    success: 'SUCCESS',\r\n    error: 'ERROR',\r\n    warning: 'WARNING'\r\n  };\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DefaultRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Document} from '../../modules/document/document';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DocumentService {\n\n  constructor(private http: HttpClient) { }\n\n  // tslint:disable-next-line:typedef\n  newDocument(documentData, companyName){\n    return this.http.post<Document>('/api/new-document/' + companyName, documentData);\n  }\n\n  // tslint:disable-next-line:typedef\n  getDocument(finYear, docType, tin){\n    return this.http.get<Document []>('/api/get-filename/' + finYear + '/' + docType + '/' + tin);\n  }\n\n  // tslint:disable-next-line:typedef\n  deleteDocument(documentName){\n    // @ts-ignore\n    return this.http.delete('/api/delete-document/' + documentName);\n  }\n\n  // tslint:disable-next-line:typedef\n  getFinancialYearList(){\n    return this.http.get('/api/get-years');\n  }\n\n  // tslint:disable-next-line:typedef\n  getReportList(){\n    return this.http.get('/api/get-reports');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MAT_LABEL_GLOBAL_OPTIONS, MatNativeDateModule, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport {CdkTableModule} from '@angular/cdk/table';\n\nconst MaterialComponents = [\n  MatTreeModule,\n  CdkTableModule,\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatStepperModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatBadgeModule,\n  MatFormFieldModule\n];\n\n// noinspection AngularInvalidImportedOrDeclaredSymbol\n@NgModule({\n  imports: [MaterialComponents],\n  exports: [MaterialComponents]\n})\nexport class MaterialModule { }\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {NgxUiLoaderService} from 'ngx-ui-loader';\n\n@Component({\n  selector: 'app-dialog-logout',\n  templateUrl: './dialog-logout.component.html',\n  styleUrls: ['./dialog-logout.component.scss']\n})\nexport class DialogLogoutComponent implements OnInit {\n\n  userName = 'User';\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any,\n              private ngxUiLoaderService: NgxUiLoaderService,\n              private dialogRef: MatDialogRef<DialogLogoutComponent>) {\n    if (data){\n      this.userName = data.userName || this.userName;\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  confirm(): void{\n    this.ngxUiLoaderService.start();\n    this.dialogRef.close(true);\n  }\n}\n","<h2 mat-dialog-title>Logged Out </h2>\n<mat-dialog-content>Hi {{userName}}. Are you sure you want to Logout?</mat-dialog-content>\n<mat-dialog-actions>\n  <button mat-raised-button color=\"primary\" mat-dialog-close >Keep me logged in</button>\n  <button mat-raised-button color=\"warn\" (click)=\"confirm()\" >Log Out</button>\n</mat-dialog-actions>\n\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {User} from '../../modules/user/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  // tslint:disable-next-line:typedef\n  newUser(userData){\n    return this.http.post<User>('/api/new-user', userData);\n  }\n\n  // tslint:disable-next-line:typedef\n  getUser(username){\n    return this.http.get<User>('/api/get-user-by-username/' + username);\n  }\n\n  // tslint:disable-next-line:typedef\n  updateUser(nic, userData){\n    // @ts-ignore\n    return this.http.put<User>(`/api/update-user/${nic}`, userData);\n  }\n\n  // tslint:disable-next-line:typedef\n  changePassword(username, oldPassword, userData){\n    // tslint:disable-next-line:ban-types\n    return this.http.post<String>('/api/update-password/' + username + '/' + oldPassword, userData);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {MatSnackBar, MatSnackBarDismiss} from '@angular/material/snack-bar';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToasterService {\n\n  constructor(public snackBar: MatSnackBar) { }\n\n  showToaster(message: string, type: string, customConfigs?: {duration?: number, panelClass?: string}): Observable<MatSnackBarDismiss>{\n    let customClass = '';\n\n    if (type.toUpperCase() === 'SUCCESS'){\n      customClass = 'snack-bar-success';\n    }\n\n    if (type.toUpperCase() === 'ERROR'){\n      customClass = 'snack-bar-error';\n    }\n\n    if (type.toUpperCase() === 'WARNING'){\n      customClass = 'snack-bar-warning';\n    }\n\n    const config: any = Object.assign({}, {\n      duration: 3000,\n      panelClass: customClass,\n      verticalPosition: 'bottom',\n      horizontalPosition: 'center'\n    }, customConfigs);\n\n    return this.snackBar.open(message, 'close', config).afterDismissed();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DefaultRoutingModule } from './default-routing.module';\nimport {RouterModule} from '@angular/router';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {HttpClientModule} from '@angular/common/http';\nimport {DocumentService} from '../../shared/services/document.service';\nimport {UserService} from '../../shared/services/user.service';\nimport {ClientService} from '../../shared/services/client.service';\nimport {FileService} from '../../shared/services/file.service';\nimport {ToasterService} from '../../shared/services/toaster.service';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    DefaultRoutingModule,\n    RouterModule,\n    FlexLayoutModule,\n    HttpClientModule\n  ],\n  providers: [\n    DocumentService,\n    UserService,\n    ClientService,\n    FileService,\n    ToasterService\n  ]\n})\nexport class DefaultModule { }\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {FileService} from '../../shared/services/file.service';\nimport {NgxUiLoaderService} from 'ngx-ui-loader';\nimport {FormBuilder} from '@angular/forms';\nimport {DocumentService} from '../../shared/services/document.service';\nimport {SETTINGS} from '../../shared/config/commons.settings';\nimport {ToasterService} from '../../shared/services/toaster.service';\nimport {Document} from './document';\nimport {ClientService} from '../../shared/services/client.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {AuthService} from '../../authentication/service/auth/auth.service';\nimport {DialogDeletefileComponent} from './dialog-deletefile/dialog-deletefile.component';\n\n@Component({\n  selector: 'app-document',\n  templateUrl: './document.component.html',\n  styleUrls: ['./document.component.scss']\n})\nexport class DocumentComponent implements OnInit {\n\n  files: File[] = [];\n  uploadedFileName = ' ';\n  documents: Document[];\n  companies: Array<string>;\n  years: Array<string>;\n  reports: Array<string>;\n\n  private privileges: string;\n  getDocument = false;\n  updateDocument = false;\n  addDocument = false;\n  deleteFile = false;\n\n  // @ts-ignore\n  newDocumentForm = this.fb.group({\n    companyName: [''],\n    financialYear: [''],\n    reportType: [''],\n    documentName: [''],\n    status: ['']\n  });\n\n  // @ts-ignore\n  updateDocumentForm = this.fb.group({\n    companyName: [''],\n    financialYear: [''],\n    reportType: [''],\n    status: ['']\n  });\n\n\n  constructor(private fileService: FileService,\n              private ngxUiLoaderService: NgxUiLoaderService,\n              private fb: FormBuilder,\n              private documentService: DocumentService,\n              private toasterService: ToasterService,\n              public dialog: MatDialog,\n              private authService: AuthService,\n              private clientService: ClientService) { }\n\n  ngOnInit(): void {\n    this.privileges = localStorage.getItem(SETTINGS.PRIVILEGES);\n\n    this.getDocument = this.privileges.includes('DOCUMENT.GET');\n    this.updateDocument = this.privileges.includes('DOCUMENT.PUT');\n    this.addDocument = this.privileges.includes('DOCUMENT.POST');\n    this.deleteFile = this.privileges.includes('DOCUMENT.DELETE');\n\n    this.fileService.onUploadedFileResponseChange.subscribe((resp) => {\n      this.ngxUiLoaderService.stop();\n      this.uploadedFileName = resp.fileName;\n    });\n\n    this.companyList();\n    this.yearList();\n    this.reportList();\n  }\n\n  // tslint:disable-next-line:typedef\n  public yearList(){\n    this.documentService.getFinancialYearList().subscribe(\n      (listYears: Array<string>) => this.years = listYears,\n      error => console.log('Cannot get year list')\n    );\n  }\n  // tslint:disable-next-line:typedef\n  companyList(){\n    this.clientService.getCompanies().subscribe(\n      // tslint:disable-next-line:ban-types\n      (listCompanies: Array<string>) => this.companies = listCompanies,\n      error => console.log('Cannot get company list')\n    );\n  }\n  // tslint:disable-next-line:typedef\n  reportList(){\n    this.documentService.getReportList().subscribe(\n      (listReports: Array<string>) => this.reports = listReports,\n      error => console.log('Cannot get report types')\n    );\n  }\n  //\n  onSelect(event): void {\n    const fileObject = event.addedFiles[0];\n    const formData = new FormData();\n    formData.append('file', fileObject);\n    this.ngxUiLoaderService.start();\n    this.fileService.uploadFile(formData);\n    this.files = [];\n    this.files.push(...event.addedFiles);\n  }\n\n  onRemove(event): void {\n    this.files.splice(this.files.indexOf(event), 1);\n  }\n\n  // tslint:disable-next-line:typedef\n  saveDocument(){\n    // Get uploaded file name and assign to form field\n    this.ngxUiLoaderService.start();\n    this.newDocumentForm.patchValue({documentName: this.uploadedFileName});\n\n    if (this.uploadedFileName === ' ' || this.uploadedFileName === null){\n      this.toasterService.showToaster(`Please upload document!`, SETTINGS.TOASTER_MESSAGES.error);\n    }\n\n    else {\n      this.documentService.newDocument(this.newDocumentForm.value, this.newDocumentForm.getRawValue().companyName)\n        .subscribe(\n          response => {\n            console.log('SUCCESS', response);\n            this.ngxUiLoaderService.stop();\n            this.toasterService.showToaster(`Document successfully uploaded!`, SETTINGS.TOASTER_MESSAGES.success);\n            this.newDocumentForm.reset();\n            this.onRemove(this.uploadedFileName);\n          },\n          error => {\n            console.log('ERROR', error);\n            this.ngxUiLoaderService.stop();\n            this.toasterService.showToaster(`Document upload failed!`, SETTINGS.TOASTER_MESSAGES.error);\n          }\n        );\n    }\n  }\n\n  // tslint:disable-next-line:typedef\n  getFile() {\n    // @ts-ignore\n    this.ngxUiLoaderService.start();\n    this.documentService.getDocument(this.updateDocumentForm.getRawValue().financialYear,\n      this.updateDocumentForm.getRawValue().reportType,\n      this.updateDocumentForm.getRawValue().companyName)\n      .subscribe(\n        (listDocuments) => {\n          this.documents = listDocuments;\n          this.ngxUiLoaderService.stop();\n        },\n        (error) => {\n          console.log(error);\n          this.ngxUiLoaderService.stop();\n        }\n      );\n  }\n\n  // tslint:disable-next-line:typedef\n  deleteDocument(documentName): void{\n\n    const dialogRef = this.dialog.open(DialogDeletefileComponent,\n      {\n        data: {\n          userName: this.authService.getUserObject().username\n        }\n      });\n\n    dialogRef.afterClosed().subscribe( result => {\n      if (result){\n        this.fileService.deleteFile(documentName)\n          .subscribe(\n            response => {\n              console.log('SUCCESS', response);\n            },\n            error => {\n              console.log('ERROR', error);\n            }\n          );\n\n        this.documentService.deleteDocument(documentName)\n          .subscribe(\n            response => {\n              console.log('SUCCESS', response);\n              this.ngxUiLoaderService.stop();\n              this.updateDocumentForm.reset();\n              this.documents = [];\n              this.toasterService.showToaster(`Document successfully deleted!`, SETTINGS.TOASTER_MESSAGES.success);\n            },\n            error => {\n              console.log('ERROR', error);\n              this.ngxUiLoaderService.stop();\n              this.toasterService.showToaster(`Document delete failed!`, SETTINGS.TOASTER_MESSAGES.error);\n            }\n          );\n\n      }\n    });\n\n  }\n}\n","<div>\n  <br>\n</div>\n\n<div>\n  <mat-card class=\"card\">\n\n    <mat-card-title> Update Documents </mat-card-title>\n\n    <div>\n      <br>\n    </div>\n\n    <div>\n      <form [formGroup]=\"updateDocumentForm\">\n\n        <table >\n<!--          <tr>-->\n<!--            <td class=\"label\">-->\n<!--              <mat-label for=\"tin\">TIN :</mat-label>-->\n<!--            </td>-->\n\n<!--            <td>-->\n<!--              <mat-form-field class=\"example-full-width\">-->\n<!--                <input type=\"text\" formControlName=\"tin\" required matInput>-->\n<!--              </mat-form-field>-->\n<!--            </td>-->\n\n<!--          </tr>-->\n\n          <tr>\n            <td class=\"label\">\n              <mat-label for=\"cname\"> Company Name :</mat-label>\n            </td>\n\n            <td>\n              <mat-form-field appearance=\"fill\">\n                <mat-label>Select...</mat-label>\n                <mat-select formControlName=\"companyName\" required>\n                  <mat-option  *ngFor=\"let company of companies\" [value]=\"company\">{{company}}</mat-option>\n                </mat-select>\n              </mat-form-field>\n            </td>\n          </tr>\n\n          <tr>\n            <td class=\"label\">\n              <mat-label for=\"fyear\" > Financial Year :</mat-label>\n            </td>\n\n            <td>\n              <mat-form-field appearance=\"fill\">\n                <mat-label>Select...</mat-label>\n                <mat-select formControlName=\"financialYear\" required>\n                  <mat-option *ngFor=\"let year of years\" [value]=\"year\">{{year}}</mat-option>\n                </mat-select>\n              </mat-form-field>\n            </td>\n          </tr>\n\n          <tr>\n            <td class=\"label\">\n              <mat-label for=\"rtype\"> Report Type :</mat-label>\n            </td>\n\n            <td>\n              <mat-form-field appearance=\"fill\">\n                <mat-label>Select...</mat-label>\n                <mat-select formControlName=\"reportType\" required>\n                  <!--need to add values automatically -->\n                  <mat-option *ngFor=\"let report of reports\" [value]=\"report\">{{report}}</mat-option>\n                </mat-select>\n              </mat-form-field>\n            </td>\n          </tr>\n\n          <tr>\n            <td class=\"label\">\n              <button mat-raised-button color=\"accent\" type=\"reset\" value=\"Reset\">\n                <mat-icon>refresh</mat-icon> Reset</button>\n            </td>\n\n            <td class=\"label2\">\n              <button mat-raised-button color=\"primary\" type=\"submit\" value=\"Submit\"\n                      *ngIf=\"updateDocument\"\n              (click)=\"getFile()\" [disabled]=\"!updateDocumentForm.valid\">\n                <mat-icon>search</mat-icon> Find</button>\n            </td>\n          </tr>\n        </table>\n      </form>\n    </div>\n\n    <div>\n      <br>\n    </div>\n\n    <!-- Green Line-->\n    <mat-divider></mat-divider>\n\n    <div>\n      <br><br>\n    </div>\n\n    <div>\n      <!--Document Table-->\n      <!--Example-->\n\n      <table  *ngIf=\"documents && documents.length\" class=\"table\">\n        <thead class=\"thead-dark\">\n        <tr>\n          <th >No.</th>\n          <th> Financial Year </th>\n          <th > Report Type </th>\n          <th> Document </th>\n          <th > Action </th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let document of documents; index as i\">\n          <td>{{i+1}}</td>\n          <td>{{document.financialYear}}</td>\n          <td>{{document.reportType}}</td>\n          <td>{{document.documentName}}</td>\n          <td>\n            <button mat-raised-button color=\"primary\" type=\"submit\" value=\"Submit\"\n                    *ngIf=\"deleteFile\"\n            (click)=\"deleteDocument(document.documentName)\">\n              <mat-icon></mat-icon>Delete\n            </button>\n          </td>\n        </tr>\n        </tbody>\n      </table>\n\n      <!-- End Example-->\n      <!--End Document Table-->\n    </div>\n\n  </mat-card>\n</div>\n\n<div>\n  <br>\n</div>\n<!--Upload documents-->\n<div>\n  <mat-card class=\"card\">\n\n    <mat-card-title>\n      Upload Documents\n    </mat-card-title>\n\n    <div>\n      <br>\n    </div>\n\n    <div>\n      <form [formGroup]=\"newDocumentForm\">\n        <table>\n<!--          <tr>-->\n<!--            <td class=\"label\">-->\n<!--              <mat-label for=\"tin\">TIN :</mat-label>-->\n<!--            </td>-->\n\n<!--            <td>-->\n<!--              <mat-form-field class=\"example-full-width\">-->\n<!--                <input type=\"text\" formControlName=\"tin\" required matInput>-->\n<!--              </mat-form-field>-->\n<!--            </td>-->\n<!--          </tr>-->\n\n          <tr>\n            <td class=\"label\">\n              <mat-label for=\"cname\"> Company Name :</mat-label>\n            </td>\n\n            <td>\n              <mat-form-field appearance=\"fill\">\n                <mat-label>Select...</mat-label>\n                <mat-select formControlName=\"companyName\" required>\n                  <mat-option  *ngFor=\"let company of companies\" [value]=\"company\">{{company}}</mat-option>\n                </mat-select>\n              </mat-form-field>\n            </td>\n          </tr>\n\n          <tr>\n            <td class=\"label\">\n              <mat-label for=\"fyear\"> Financial Year :</mat-label>\n            </td>\n\n            <td>\n              <mat-form-field class=\"example-full-width\">\n                <input type=\"text\" formControlName=\"financialYear\" matInput placeholder=\"Ex: 2019-2020\" required>\n              </mat-form-field>\n            </td>\n          </tr>\n\n          <tr>\n            <td class=\"label\">\n              <mat-label for=\"rtype\"> Report Type :</mat-label>\n            </td>\n\n            <td>\n              <mat-form-field class=\"example-full-width\">\n                <input type=\"text\" formControlName=\"reportType\" matInput placeholder=\"Ex: Financial Reports\" required>\n              </mat-form-field>\n            </td>\n          </tr>\n\n          <br>\n          <!--          <tr>-->\n          <!--            <td  colspan=\"2\">-->\n          <!--              <input type=\"file\" id=\"sfile\" name=\"sfile\" class=\"file1\" required>-->\n          <!--            </td>-->\n          <!--          </tr>-->\n\n          <tr>\n            <td colspan=\"2\">\n              <ngx-dropzone (change)=\"onSelect($event)\" [multiple]=\"false\">\n                <ngx-dropzone-label>Drop Files Here!!</ngx-dropzone-label>\n                <ngx-dropzone-preview *ngFor=\"let f of files\" [removable]=\"true\" (removed)=\"onRemove(f)\">\n                  <ngx-dropzone-label>{{ f.name }} ({{ f.type }})</ngx-dropzone-label>\n                </ngx-dropzone-preview>\n              </ngx-dropzone>\n            </td>\n          </tr>\n\n          <br>\n          <tr>\n            <td class=\"label2\" colspan=\"2\">\n              <section>\n                <mat-checkbox color=\"primary\" formControlName=\"status\">Active</mat-checkbox>\n              </section>\n            </td>\n          </tr>\n          <br>\n          <tr>\n            <td class=\"label\">\n              <button mat-raised-button color=\"accent\" type=\"reset\" value=\"Reset\">\n                <mat-icon>refresh</mat-icon>\n                Reset\n              </button>\n            </td>\n\n            <td class=\"label2\">\n              <button mat-raised-button color=\"primary\" type=\"submit\" value=\"Submit\"\n                      [disabled]=\"!newDocumentForm.valid\"\n                      (click)=\"saveDocument()\">\n                <mat-icon>cloud_upload</mat-icon>\n                Upload\n              </button>\n            </td>\n          </tr>\n        </table>\n      </form>\n<!--      {{newDocumentForm.value | json}}-->\n      <br>\n    </div>\n\n\n<!--    <mat-divider></mat-divider>-->\n\n    <div>\n      <br><br>\n    </div>\n\n    <div>\n<!--      <mat-card-title>Document List-->\n<!--        <mat-icon>list_alt</mat-icon>-->\n<!--      </mat-card-title>-->\n      <br>\n<!--      <div>-->\n<!--        &lt;!&ndash;Document Table&ndash;&gt;-->\n<!--        <table class=\"table2\">-->\n<!--          <tr>-->\n<!--            <th>No.</th>-->\n<!--            <th> Financial Year</th>-->\n<!--            <th>Report Type</th>-->\n<!--            <th>Document</th>-->\n<!--          </tr>-->\n\n<!--          <tr>-->\n<!--            <td>-->\n<!--              &lt;!&ndash;number list&ndash;&gt;1-->\n<!--            </td>-->\n\n<!--            <td>-->\n<!--              &lt;!&ndash;Financial Year&ndash;&gt;2019/2020-->\n<!--            </td>-->\n\n<!--            <td>-->\n<!--              &lt;!&ndash;Report Type&ndash;&gt;Income Statement-->\n<!--            </td>-->\n\n<!--            <td>-->\n<!--              &lt;!&ndash;Document list get by after submitted&ndash;&gt;abc.doc-->\n<!--            </td>-->\n<!--          </tr>-->\n\n<!--          <tr>-->\n<!--            <td>-->\n<!--              &lt;!&ndash;number list&ndash;&gt;2-->\n<!--            </td>-->\n\n<!--            <td>-->\n<!--              &lt;!&ndash;Financial Year&ndash;&gt;2019/2020-->\n<!--            </td>-->\n\n<!--            <td>-->\n<!--              &lt;!&ndash;Report Type&ndash;&gt;Audit Report-->\n<!--            </td>-->\n\n<!--            <td>-->\n<!--              &lt;!&ndash;Document list get by after submitted&ndash;&gt;aaa.pdf-->\n<!--            </td>-->\n<!--          </tr>-->\n<!--        </table>-->\n<!--        &lt;!&ndash;End Document Table&ndash;&gt;-->\n<!--      </div>-->\n    </div>\n<!--    <button mat-raised-button (click)=\"downloadFileTest(uploadedFileName)\">Download File test</button>-->\n  </mat-card>\n\n  <br>\n</div>\n<!--End - Upload documents-->\n\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Client} from '../../modules/client/client';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientService {\n\n  constructor(private http: HttpClient) { }\n\n  // tslint:disable-next-line:typedef\n  newClient(clientData){\n    // return this.http.post<any>(this.url, clientData);\n    return this.http.post<Client>('/api/new-client', clientData);\n  }\n\n  // tslint:disable-next-line:typedef\n  getClient(companyName){\n    return this.http.get<Client>('/api/get-client-by-tin/' + companyName);\n  }\n\n  // tslint:disable-next-line:typedef\n  updateClient(tin, clientData){\n    // @ts-ignore\n    return this.http.put<Client>(`/api/update-client-by-tin/${tin}`, clientData);\n  }\n\n  // tslint:disable-next-line:typedef\n  getCompanies(){\n    return this.http.get('/api/get-companies');\n  }\n\n  // tslint:disable-next-line:typedef\n  getAllcompanies(){\n    return this.http.get('/api/get-all-client');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {AuthService} from '../auth/auth.service';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate{\n\n  constructor(private router: Router, private authService: AuthService) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if (!this.authService.isLoggedIn()){\n      localStorage.clear();\n      this.router.navigate(['/login']);\n      return false;\n    }\n    return true;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {DefaultComponent} from './layouts/default/default.component';\nimport {HomeComponent} from './modules/home/home.component';\nimport {UserComponent} from './modules/user/user.component';\nimport {DocumentComponent} from './modules/document/document.component';\nimport {ClientComponent} from './modules/client/client.component';\nimport {AuthGuard} from './authentication/service/guards/auth.guard';\nimport {LoginComponent} from './authentication/component/login/login.component';\n\nconst routes: Routes = [\n\n  {\n    path: '',\n    component: DefaultComponent,\n    canActivate: [AuthGuard],\n    children: [\n      {\n      path: '',\n      component: HomeComponent,\n        pathMatch: 'full'\n    },\n      {\n        path: 'user',\n        component: UserComponent,\n        pathMatch: 'full'\n      },\n      {\n        path: 'document',\n        component: DocumentComponent,\n        pathMatch: 'full'\n      },\n      {\n        path: 'client',\n        component: ClientComponent,\n        pathMatch: 'full'\n      }]\n  },\n  {\n    path: 'login',\n    loadChildren: () => import('./authentication/authentication.module').then(m => m.AuthenticationModule)\n  },\n  {\n    path: '**',\n    redirectTo: '/',\n\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {MediaChange, MediaObserver} from '@angular/flex-layout';\n\n@Component({\n  selector: 'app-defaultlt',\n  templateUrl: './default.component.html',\n  styleUrls: ['./default.component.scss']\n})\nexport class DefaultComponent implements OnInit, OnDestroy {\n\n  mediaSub: Subscription;\n  deviceXs: boolean;\n\n  constructor(public mediaObserver: MediaObserver) { }\n\n  ngOnInit(): void {\n    this.mediaSub = this.mediaObserver.media$.subscribe((result: MediaChange) => {\n      this.deviceXs = result.mqAlias === 'xs' ? true : false;\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.mediaSub.unsubscribe();\n  }\n\n}\n","<app-header [deviceXs] ='deviceXs' fxLayout=\"column\" ></app-header>\n\n<div fxFlex class=\"working\">\n  <div fxFlex class=\"content\">\n    <ngx-ui-loader></ngx-ui-loader>\n    <router-outlet></router-outlet>\n  </div>\n</div>\n\n<app-footer fxLayout=\"column\"></app-footer>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {NgxUiLoaderService} from 'ngx-ui-loader';\n\n@Component({\n  selector: 'app-dialog-deletefile',\n  templateUrl: './dialog-deletefile.component.html',\n  styleUrls: ['./dialog-deletefile.component.scss']\n})\nexport class DialogDeletefileComponent implements OnInit {\n  userName: 'User';\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any,\n              private ngxUiLoaderService: NgxUiLoaderService,\n              private dialogRef: MatDialogRef<DialogDeletefileComponent>) {\n    if (data){\n      this.userName = data.userName || this.userName;\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  // tslint:disable-next-line:typedef\n  confirm() {\n    this.ngxUiLoaderService.start();\n    this.dialogRef.close(true);\n  }\n}\n","<h2 mat-dialog-title>Delete File </h2>\n<mat-dialog-content>Hi {{userName}}. Are you sure you want to Delete File?</mat-dialog-content>\n<mat-dialog-actions>\n  <button mat-raised-button color=\"primary\" mat-dialog-close >No</button>\n  <button mat-raised-button color=\"warn\" (click)=\"confirm()\" >Yes</button>\n</mat-dialog-actions>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {DialogLogoutComponent} from '../dialog-logout/dialog-logout.component';\nimport {AuthService} from '../../../authentication/service/auth/auth.service';\nimport {SETTINGS} from '../../config/commons.settings';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  @Input() deviceXs: boolean;\n  private privileges: string;\n  showUser = false;\n  showDocument = false;\n  showClient = false;\n  userName: string;\n\n  constructor(public dialog: MatDialog, private authService: AuthService) {\n\n  }\n\n  ngOnInit(): void {\n\n    this.privileges = localStorage.getItem(SETTINGS.PRIVILEGES);\n\n      // @ts-ignore\n    this.showClient = this.privileges.includes('CLIENT.GET' || 'CLIENT.PUT' || 'CLIENT.POST');\n      // @ts-ignore\n    this.showDocument = this.privileges.includes('DOCUMENT.GET' || 'DOCUMENT.POST' || 'DOCUMENT.PUT');\n      // @ts-ignore\n    this.showUser = this.privileges.includes('USER.GET' || 'USER.PUT' || 'USER.POST');\n\n    this.userName = this.authService.getUserObject().username;\n  }\n\n  // tslint:disable-next-line:typedef\n  logOut(){\n\n    const dialogRef = this.dialog.open(DialogLogoutComponent,\n      {\n        data: {\n            userName: this.authService.getUserObject().username\n        }\n      });\n\n    dialogRef.afterClosed().subscribe( result => {\n      if (result){\n        this.authService.logOut();\n      }\n    });\n  }\n}\n","<div>\n  <mat-toolbar color=\"primary\">\n    <mat-toolbar-row fxLayoutAlign=\"space-between center\">\n\n      <div fxLayoutAlign=\"space-between center\">\n        <mat-icon style=\"margin-right: 5px;\">source</mat-icon>\n        <mat-label>RTA DMS</mat-label>\n      </div>\n\n      <div>\n        <mat-label> Welcome {{userName}}</mat-label>\n      </div>\n\n      <div fxLayoutGap=\"10px\" *ngIf=\"!deviceXs\">\n        <a mat-raised-button color=\"primary\" routerLink=\"/\" ><mat-icon>home</mat-icon> Home</a>\n        <a *ngIf=\"showUser\" mat-raised-button color=\"primary\" routerLink=\"/user\" ><mat-icon>person</mat-icon> User</a>\n        <a *ngIf=\"showClient\" mat-raised-button color=\"primary\" routerLink=\"/client\" ><mat-icon>corporate_fare</mat-icon> Client</a>\n        <a *ngIf=\"showDocument\" mat-raised-button color=\"primary\" routerLink=\"/document\"><mat-icon>folder_shared</mat-icon> Document</a>\n        <button mat-raised-button color=\"warn\" (click)= 'logOut()'><mat-icon>power_settings_new</mat-icon> Log Out</button>\n\n      </div>\n\n    </mat-toolbar-row>\n\n    <mat-toolbar-row fxLayoutGap=\"10px\" *ngIf=\"deviceXs\">\n      <a mat-raised-button color=\"primary\" routerLink=\"/home\" >Home</a>\n      <a mat-raised-button color=\"primary\" routerLink=\"/home/document\" >Document</a>\n      <a mat-raised-button color=\"primary\" routerLink=\"/home/user\" >User</a>\n      <a mat-raised-button color=\"primary\" routerLink=\"/home/client\" >Client</a><button mat-raised-button color=\"warn\" (click)= 'logOut()'><mat-icon>power_settings_new</mat-icon></button>\n    </mat-toolbar-row>\n\n  </mat-toolbar>\n</div>\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}