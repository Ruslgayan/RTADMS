{"version":3,"sources":["./src/app/authentication/authentication.module.ts","./src/app/authentication/component/login/login.component.ts","./src/app/authentication/component/login/login.component.html","./src/app/authentication/authentication-routing.module.ts"],"names":[],"mappings":"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","file":"authentication-authentication-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthenticationRoutingModule } from './authentication-routing.module';\nimport { LoginComponent } from './component/login/login.component';\nimport {MaterialModule} from '../shared/material/material.module';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {AuthService} from './service/auth/auth.service';\nimport {TokenInterceptorService} from '../shared/services/token-interceptor.service';\nimport {CdkColumnDef} from '@angular/cdk/table';\n\n\n@NgModule({\n  declarations: [LoginComponent],\n    imports: [\n        CommonModule,\n        AuthenticationRoutingModule,\n        MaterialModule,\n        FlexLayoutModule,\n        ReactiveFormsModule,\n        HttpClientModule\n    ],\n  providers: [\n    AuthService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true\n    },\n    CdkColumnDef\n  ],\n})\nexport class AuthenticationModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ToasterService} from '../../../shared/services/toaster.service';\nimport {AuthService} from '../../service/auth/auth.service';\nimport {Router} from '@angular/router';\nimport {SETTINGS} from '../../../shared/config/commons.settings';\nimport {NgxUiLoaderService} from 'ngx-ui-loader';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private toasterService: ToasterService,\n              private authService: AuthService,\n              private formBuilder: FormBuilder,\n              private router: Router,\n              private ngxUiLoaderService: NgxUiLoaderService) { }\n\n  loginForm: FormGroup;\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      username: [null, Validators.compose([Validators.required])],\n      password: [null, Validators.compose([Validators.required])]\n    });\n\n    this.authService.getLoggedInStatus().subscribe((status) => {\n      if (status.isAuthenticated){\n        // this.toasterService.showToaster('Correct credentials!', SETTINGS.TOASTER_MESSAGES.success);\n        return this.router.navigate(['/home']);\n      }\n      this.toasterService.showToaster('Incorrect credentials!', SETTINGS.TOASTER_MESSAGES.error);\n    });\n  }\n\n  onLogin(): void{\n    // if (this.loginForm.invalid){\n    //   this.toasterService.showToaster('Please Enter Your Username & Password!', SETTINGS.TOASTER_MESSAGES.error);\n    // }\n    const payload = this.loginForm.getRawValue();\n    this.ngxUiLoaderService.start();\n    this.authService.login(payload.username, payload.password);\n  }\n}\n","\n<div class=\"back\">\n\n  <div>\n    <mat-card>\n      <mat-card-content>\n        <form [formGroup]=\"loginForm\">\n          <div class=\"login100-form-logo\"></div>\n          <br>\n          <h1>LOGIN</h1>\n\n          <mat-form-field class=\"full-width-input\">\n            <input matInput placeholder=\"Username\" formControlName=\"username\">\n            <mat-error>\n              Please provide a valid Username\n            </mat-error>\n          </mat-form-field>\n          <mat-form-field class=\"full-width-input\">\n            <input matInput type=\"password\" placeholder=\"Password\" formControlName=\"password\">\n            <mat-error>\n              Please provide a valid password\n            </mat-error>\n          </mat-form-field>\n          <br>\n          <button mat-raised-button color=\"primary\" style=\"font-size: 24px\" (click)=\"onLogin()\" >Login</button>\n        </form>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {LoginComponent} from './component/login/login.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthenticationRoutingModule { }\n"],"sourceRoot":"webpack:///"}